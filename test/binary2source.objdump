
tests/binary2source:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp> (File Offset: 0x154):
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag> (File Offset: 0x168):
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 0f                	add    %cl,(%edi)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id> (File Offset: 0x188):
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 51 c4             	add    %dl,-0x3c(%ecx)
 804819a:	52                   	push   %edx
 804819b:	dc 8c f4 eb 32 c7 e6 	fmull  -0x1938cd15(%esp,%esi,8)
 80481a2:	be 18 d9 da 23       	mov    $0x23dad918,%esi
 80481a7:	39 29                	cmp    %ebp,(%ecx)
 80481a9:	4a                   	dec    %edx
 80481aa:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 80481ab:	3a                   	.byte 0x3a

Disassembly of section .gnu.hash:

080481ac <.gnu.hash> (File Offset: 0x1ac):
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	0f 00 00             	sldt   (%eax)
 80481b3:	00 01                	add    %al,(%ecx)
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 00    	add    %al,0x0
 80481bd:	20 02                	and    %al,(%edx)
 80481bf:	22 00                	and    (%eax),%al
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0f                	add    %cl,(%edi)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00 38                	add    %bh,(%eax)
 80481c9:	f2                   	repnz
 80481ca:	8b                   	.byte 0x8b
 80481cb:	1c ad                	sbb    $0xad,%al
 80481cd:	4b                   	dec    %ebx
 80481ce:	e3 c0                	jecxz  8048190 <_init-0x2c8> (File Offset: 0x190)

Disassembly of section .dynsym:

080481d0 <.dynsym> (File Offset: 0x1d0):
	... (skipping 16 zeroes, resuming at file offset: 0x1e0)
 80481e0:	53                   	push   %ebx
	... (skipping 8 zeroes, resuming at file offset: 0x1e9)
 80481e9:	00 00                	add    %al,(%eax)
 80481eb:	00 12                	add    %dl,(%edx)
 80481ed:	00 00                	add    %al,(%eax)
 80481ef:	00 6c 00 00          	add    %ch,0x0(%eax,%eax,1)
	... (skipping 8 zeroes, resuming at file offset: 0x1fb)
 80481fb:	00 12                	add    %dl,(%edx)
 80481fd:	00 00                	add    %al,(%eax)
 80481ff:	00 85 00 00 00 00    	add    %al,0x0(%ebp)
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 00                	add    %al,(%eax)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 12                	add    %dl,(%edx)
 804820d:	00 00                	add    %al,(%eax)
 804820f:	00 3a                	add    %bh,(%edx)
	... (skipping 8 zeroes, resuming at file offset: 0x219)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 12                	add    %dl,(%edx)
 804821d:	00 00                	add    %al,(%eax)
 804821f:	00 8a 00 00 00 00    	add    %cl,0x0(%edx)
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 00                	add    %al,(%eax)
 8048229:	00 00                	add    %al,(%eax)
 804822b:	00 12                	add    %dl,(%edx)
 804822d:	00 00                	add    %al,(%eax)
 804822f:	00 2e                	add    %ch,(%esi)
	... (skipping 8 zeroes, resuming at file offset: 0x239)
 8048239:	00 00                	add    %al,(%eax)
 804823b:	00 12                	add    %dl,(%edx)
 804823d:	00 00                	add    %al,(%eax)
 804823f:	00 58 00             	add    %bl,0x0(%eax)
	... (skipping 8 zeroes, resuming at file offset: 0x24a)
 804824a:	00 00                	add    %al,(%eax)
 804824c:	12 00                	adc    (%eax),%al
 804824e:	00 00                	add    %al,(%eax)
 8048250:	35 00 00 00 00       	xor    $0x0,%eax
 8048255:	00 00                	add    %al,(%eax)
 8048257:	00 00                	add    %al,(%eax)
 8048259:	00 00                	add    %al,(%eax)
 804825b:	00 12                	add    %dl,(%edx)
 804825d:	00 00                	add    %al,(%eax)
 804825f:	00 01                	add    %al,(%ecx)
	... (skipping 8 zeroes, resuming at file offset: 0x269)
 8048269:	00 00                	add    %al,(%eax)
 804826b:	00 20                	add    %ah,(%eax)
 804826d:	00 00                	add    %al,(%eax)
 804826f:	00 29                	add    %ch,(%ecx)
	... (skipping 8 zeroes, resuming at file offset: 0x279)
 8048279:	00 00                	add    %al,(%eax)
 804827b:	00 12                	add    %dl,(%edx)
 804827d:	00 00                	add    %al,(%eax)
 804827f:	00 66 00             	add    %ah,0x0(%esi)
	... (skipping 8 zeroes, resuming at file offset: 0x28a)
 804828a:	00 00                	add    %al,(%eax)
 804828c:	12 00                	adc    (%eax),%al
 804828e:	00 00                	add    %al,(%eax)
 8048290:	73 00                	jae    8048292 <_init-0x1c6> (File Offset: 0x292)
	... (skipping 8 zeroes, resuming at file offset: 0x29a)
 804829a:	00 00                	add    %al,(%eax)
 804829c:	12 00                	adc    (%eax),%al
 804829e:	00 00                	add    %al,(%eax)
 80482a0:	6b 00 00             	imul   $0x0,(%eax),%eax
	... (skipping 8 zeroes, resuming at file offset: 0x2ab)
 80482ab:	00 12                	add    %dl,(%edx)
 80482ad:	00 00                	add    %al,(%eax)
 80482af:	00 4b 00             	add    %cl,0x0(%ebx)
	... (skipping 8 zeroes, resuming at file offset: 0x2ba)
 80482ba:	00 00                	add    %al,(%eax)
 80482bc:	12 00                	adc    (%eax),%al
 80482be:	00 00                	add    %al,(%eax)
 80482c0:	5f                   	pop    %edi
 80482c1:	00 00                	add    %al,(%eax)
 80482c3:	00 90 a1 04 08 04    	add    %dl,0x40804a1(%eax)
 80482c9:	00 00                	add    %al,(%eax)
 80482cb:	00 11                	add    %dl,(%ecx)
 80482cd:	00 19                	add    %bl,(%ecx)
 80482cf:	00 1a                	add    %bl,(%edx)
 80482d1:	00 00                	add    %al,(%eax)
 80482d3:	00 ac 8a 04 08 04 00 	add    %ch,0x40804(%edx,%ecx,4)
 80482da:	00 00                	add    %al,(%eax)
 80482dc:	11 00                	adc    %eax,(%eax)
 80482de:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

080482e0 <.dynstr> (File Offset: 0x2e0):
 80482e0:	00 5f 5f             	add    %bl,0x5f(%edi)
 80482e3:	67 6d                	insl   (%dx),%es:(%di)
 80482e5:	6f                   	outsl  %ds:(%esi),(%dx)
 80482e6:	6e                   	outsb  %ds:(%esi),(%dx)
 80482e7:	5f                   	pop    %edi
 80482e8:	73 74                	jae    804835e <_init-0xfa> (File Offset: 0x35e)
 80482ea:	61                   	popa   
 80482eb:	72 74                	jb     8048361 <_init-0xf7> (File Offset: 0x361)
 80482ed:	5f                   	pop    %edi
 80482ee:	5f                   	pop    %edi
 80482ef:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 80482f3:	63 2e                	arpl   %bp,(%esi)
 80482f5:	73 6f                	jae    8048366 <_init-0xf2> (File Offset: 0x366)
 80482f7:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 80482fc:	4f                   	dec    %edi
 80482fd:	5f                   	pop    %edi
 80482fe:	73 74                	jae    8048374 <_init-0xe4> (File Offset: 0x374)
 8048300:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048307:	64 
 8048308:	00 65 78             	add    %ah,0x78(%ebp)
 804830b:	69 74 00 70 65 72 72 	imul   $0x6f727265,0x70(%eax,%eax,1),%esi
 8048312:	6f 
 8048313:	72 00                	jb     8048315 <_init-0x143> (File Offset: 0x315)
 8048315:	70 75                	jo     804838c <_init-0xcc> (File Offset: 0x38c)
 8048317:	74 73                	je     804838c <_init-0xcc> (File Offset: 0x38c)
 8048319:	00 5f 5f             	add    %bl,0x5f(%edi)
 804831c:	73 74                	jae    8048392 <_init-0xc6> (File Offset: 0x392)
 804831e:	61                   	popa   
 804831f:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 8048322:	63 68 6b             	arpl   %bp,0x6b(%eax)
 8048325:	5f                   	pop    %edi
 8048326:	66 61                	popaw  
 8048328:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%eax,%eax,1),%ebp
 804832f:	68 
 8048330:	61                   	popa   
 8048331:	72 00                	jb     8048333 <_init-0x125> (File Offset: 0x333)
 8048333:	72 65                	jb     804839a <_init-0xbe> (File Offset: 0x39a)
 8048335:	61                   	popa   
 8048336:	64 00 6d 61          	add    %ch,%fs:0x61(%ebp)
 804833a:	6c                   	insb   (%dx),%es:(%edi)
 804833b:	6c                   	insb   (%dx),%es:(%edi)
 804833c:	6f                   	outsl  %ds:(%esi),(%dx)
 804833d:	63 00                	arpl   %ax,(%eax)
 804833f:	73 74                	jae    80483b5 <_init-0xa3> (File Offset: 0x3b5)
 8048341:	64                   	fs
 8048342:	65                   	gs
 8048343:	72 72                	jb     80483b7 <_init-0xa1> (File Offset: 0x3b7)
 8048345:	00 6f 70             	add    %ch,0x70(%edi)
 8048348:	65 6e                	outsb  %gs:(%esi),(%dx)
 804834a:	00 66 70             	add    %ah,0x70(%esi)
 804834d:	72 69                	jb     80483b8 <_init-0xa0> (File Offset: 0x3b8)
 804834f:	6e                   	outsb  %ds:(%esi),(%dx)
 8048350:	74 66                	je     80483b8 <_init-0xa0> (File Offset: 0x3b8)
 8048352:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048355:	6c                   	insb   (%dx),%es:(%edi)
 8048356:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804835d:	72 74                	jb     80483d3 <_init-0x85> (File Offset: 0x3d3)
 804835f:	5f                   	pop    %edi
 8048360:	6d                   	insl   (%dx),%es:(%edi)
 8048361:	61                   	popa   
 8048362:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%esi),%ebp
 8048369:	00 5f 5f             	add    %bl,0x5f(%edi)
 804836c:	78 73                	js     80483e1 <_init-0x77> (File Offset: 0x3e1)
 804836e:	74 61                	je     80483d1 <_init-0x87> (File Offset: 0x3d1)
 8048370:	74 00                	je     8048372 <_init-0xe6> (File Offset: 0x372)
 8048372:	47                   	inc    %edi
 8048373:	4c                   	dec    %esp
 8048374:	49                   	dec    %ecx
 8048375:	42                   	inc    %edx
 8048376:	43                   	inc    %ebx
 8048377:	5f                   	pop    %edi
 8048378:	32 2e                	xor    (%esi),%ch
 804837a:	34 00                	xor    $0x0,%al
 804837c:	47                   	inc    %edi
 804837d:	4c                   	dec    %esp
 804837e:	49                   	dec    %ecx
 804837f:	42                   	inc    %edx
 8048380:	43                   	inc    %ebx
 8048381:	5f                   	pop    %edi
 8048382:	32 2e                	xor    (%esi),%ch
 8048384:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048386 <.gnu.version> (File Offset: 0x386):
 8048386:	00 00                	add    %al,(%eax)
 8048388:	02 00                	add    (%eax),%al
 804838a:	02 00                	add    (%eax),%al
 804838c:	02 00                	add    (%eax),%al
 804838e:	03 00                	add    (%eax),%eax
 8048390:	02 00                	add    (%eax),%al
 8048392:	02 00                	add    (%eax),%al
 8048394:	02 00                	add    (%eax),%al
 8048396:	02 00                	add    (%eax),%al
 8048398:	00 00                	add    %al,(%eax)
 804839a:	02 00                	add    (%eax),%al
 804839c:	02 00                	add    (%eax),%al
 804839e:	02 00                	add    (%eax),%al
 80483a0:	02 00                	add    (%eax),%al
 80483a2:	02 00                	add    (%eax),%al
 80483a4:	02 00                	add    (%eax),%al
 80483a6:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080483a8 <.gnu.version_r> (File Offset: 0x3a8):
 80483a8:	01 00                	add    %eax,(%eax)
 80483aa:	02 00                	add    (%eax),%al
 80483ac:	10 00                	adc    %al,(%eax)
 80483ae:	00 00                	add    %al,(%eax)
 80483b0:	10 00                	adc    %al,(%eax)
 80483b2:	00 00                	add    %al,(%eax)
 80483b4:	00 00                	add    %al,(%eax)
 80483b6:	00 00                	add    %al,(%eax)
 80483b8:	14 69                	adc    $0x69,%al
 80483ba:	69 0d 00 00 03 00 92 	imul   $0x92,0x30000,%ecx
 80483c1:	00 00 00 
 80483c4:	10 00                	adc    %al,(%eax)
 80483c6:	00 00                	add    %al,(%eax)
 80483c8:	10 69 69             	adc    %ch,0x69(%ecx)
 80483cb:	0d 00 00 02 00       	or     $0x20000,%eax
 80483d0:	9c                   	pushf  
 80483d1:	00 00                	add    %al,(%eax)
 80483d3:	00 00                	add    %al,(%eax)
 80483d5:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080483d8 <.rel.dyn> (File Offset: 0x3d8):
 80483d8:	f0 9f                	lock lahf 
 80483da:	04 08                	add    $0x8,%al
 80483dc:	06                   	push   %es
 80483dd:	09 00                	or     %eax,(%eax)
 80483df:	00 90 a1 04 08 05    	add    %dl,0x50804a1(%eax)
 80483e5:	0f 00 00             	sldt   (%eax)

Disassembly of section .rel.plt:

080483e8 <.rel.plt> (File Offset: 0x3e8):
 80483e8:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 80483ee:	00 00                	add    %al,(%eax)
 80483f0:	04 a0                	add    $0xa0,%al
 80483f2:	04 08                	add    $0x8,%al
 80483f4:	07                   	pop    %es
 80483f5:	02 00                	add    (%eax),%al
 80483f7:	00 08                	add    %cl,(%eax)
 80483f9:	a0 04 08 07 03       	mov    0x3070804,%al
 80483fe:	00 00                	add    %al,(%eax)
 8048400:	0c a0                	or     $0xa0,%al
 8048402:	04 08                	add    $0x8,%al
 8048404:	07                   	pop    %es
 8048405:	04 00                	add    $0x0,%al
 8048407:	00 10                	add    %dl,(%eax)
 8048409:	a0 04 08 07 05       	mov    0x5070804,%al
 804840e:	00 00                	add    %al,(%eax)
 8048410:	14 a0                	adc    $0xa0,%al
 8048412:	04 08                	add    $0x8,%al
 8048414:	07                   	pop    %es
 8048415:	06                   	push   %es
 8048416:	00 00                	add    %al,(%eax)
 8048418:	18 a0 04 08 07 07    	sbb    %ah,0x7070804(%eax)
 804841e:	00 00                	add    %al,(%eax)
 8048420:	1c a0                	sbb    $0xa0,%al
 8048422:	04 08                	add    $0x8,%al
 8048424:	07                   	pop    %es
 8048425:	08 00                	or     %al,(%eax)
 8048427:	00 20                	add    %ah,(%eax)
 8048429:	a0 04 08 07 09       	mov    0x9070804,%al
 804842e:	00 00                	add    %al,(%eax)
 8048430:	24 a0                	and    $0xa0,%al
 8048432:	04 08                	add    $0x8,%al
 8048434:	07                   	pop    %es
 8048435:	0a 00                	or     (%eax),%al
 8048437:	00 28                	add    %ch,(%eax)
 8048439:	a0 04 08 07 0b       	mov    0xb070804,%al
 804843e:	00 00                	add    %al,(%eax)
 8048440:	2c a0                	sub    $0xa0,%al
 8048442:	04 08                	add    $0x8,%al
 8048444:	07                   	pop    %es
 8048445:	0c 00                	or     $0x0,%al
 8048447:	00 30                	add    %dh,(%eax)
 8048449:	a0 04 08 07 0d       	mov    0xd070804,%al
 804844e:	00 00                	add    %al,(%eax)
 8048450:	34 a0                	xor    $0xa0,%al
 8048452:	04 08                	add    $0x8,%al
 8048454:	07                   	pop    %es
 8048455:	0e                   	push   %cs
	...

Disassembly of section .init:

08048458 <_init> (File Offset: 0x458):
 8048458:	53                   	push   %ebx
 8048459:	83 ec 08             	sub    $0x8,%esp
 804845c:	e8 00 00 00 00       	call   8048461 <_init+0x9> (File Offset: 0x461)
 8048461:	5b                   	pop    %ebx
 8048462:	81 c3 93 1b 00 00    	add    $0x1b93,%ebx
 8048468:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804846e:	85 c0                	test   %eax,%eax
 8048470:	74 05                	je     8048477 <_init+0x1f> (File Offset: 0x477)
 8048472:	e8 a9 00 00 00       	call   8048520 <__gmon_start__@plt> (File Offset: 0x520)
 8048477:	e8 94 01 00 00       	call   8048610 <frame_dummy> (File Offset: 0x610)
 804847c:	e8 df 05 00 00       	call   8048a60 <__do_global_ctors_aux> (File Offset: 0xa60)
 8048481:	83 c4 08             	add    $0x8,%esp
 8048484:	5b                   	pop    %ebx
 8048485:	c3                   	ret    

Disassembly of section .plt:

08048490 <read@plt-0x10> (File Offset: 0x490):
 8048490:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048496:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804849c:	00 00                	add    %al,(%eax)
	...

080484a0 <read@plt> (File Offset: 0x4a0):
 80484a0:	ff 25 00 a0 04 08    	jmp    *0x804a000
 80484a6:	68 00 00 00 00       	push   $0x0
 80484ab:	e9 e0 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

080484b0 <printf@plt> (File Offset: 0x4b0):
 80484b0:	ff 25 04 a0 04 08    	jmp    *0x804a004
 80484b6:	68 08 00 00 00       	push   $0x8
 80484bb:	e9 d0 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

080484c0 <free@plt> (File Offset: 0x4c0):
 80484c0:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80484c6:	68 10 00 00 00       	push   $0x10
 80484cb:	e9 c0 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

080484d0 <__stack_chk_fail@plt> (File Offset: 0x4d0):
 80484d0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80484d6:	68 18 00 00 00       	push   $0x18
 80484db:	e9 b0 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

080484e0 <__xstat@plt> (File Offset: 0x4e0):
 80484e0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80484e6:	68 20 00 00 00       	push   $0x20
 80484eb:	e9 a0 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

080484f0 <perror@plt> (File Offset: 0x4f0):
 80484f0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80484f6:	68 28 00 00 00       	push   $0x28
 80484fb:	e9 90 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

08048500 <malloc@plt> (File Offset: 0x500):
 8048500:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048506:	68 30 00 00 00       	push   $0x30
 804850b:	e9 80 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

08048510 <puts@plt> (File Offset: 0x510):
 8048510:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048516:	68 38 00 00 00       	push   $0x38
 804851b:	e9 70 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

08048520 <__gmon_start__@plt> (File Offset: 0x520):
 8048520:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048526:	68 40 00 00 00       	push   $0x40
 804852b:	e9 60 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

08048530 <exit@plt> (File Offset: 0x530):
 8048530:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048536:	68 48 00 00 00       	push   $0x48
 804853b:	e9 50 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

08048540 <open@plt> (File Offset: 0x540):
 8048540:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048546:	68 50 00 00 00       	push   $0x50
 804854b:	e9 40 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

08048550 <__libc_start_main@plt> (File Offset: 0x550):
 8048550:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 8048556:	68 58 00 00 00       	push   $0x58
 804855b:	e9 30 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

08048560 <fprintf@plt> (File Offset: 0x560):
 8048560:	ff 25 30 a0 04 08    	jmp    *0x804a030
 8048566:	68 60 00 00 00       	push   $0x60
 804856b:	e9 20 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

08048570 <putchar@plt> (File Offset: 0x570):
 8048570:	ff 25 34 a0 04 08    	jmp    *0x804a034
 8048576:	68 68 00 00 00       	push   $0x68
 804857b:	e9 10 ff ff ff       	jmp    8048490 <_init+0x38> (File Offset: 0x490)

Disassembly of section .text:

08048580 <_start> (File Offset: 0x580):
 8048580:	31 ed                	xor    %ebp,%ebp
 8048582:	5e                   	pop    %esi
 8048583:	89 e1                	mov    %esp,%ecx
 8048585:	83 e4 f0             	and    $0xfffffff0,%esp
 8048588:	50                   	push   %eax
 8048589:	54                   	push   %esp
 804858a:	52                   	push   %edx
 804858b:	68 20 8a 04 08       	push   $0x8048a20
 8048590:	68 b0 89 04 08       	push   $0x80489b0
 8048595:	51                   	push   %ecx
 8048596:	56                   	push   %esi
 8048597:	68 54 88 04 08       	push   $0x8048854
 804859c:	e8 af ff ff ff       	call   8048550 <__libc_start_main@plt> (File Offset: 0x550)
 80485a1:	f4                   	hlt    
 80485a2:	90                   	nop
 80485a3:	90                   	nop
 80485a4:	90                   	nop
 80485a5:	90                   	nop
 80485a6:	90                   	nop
 80485a7:	90                   	nop
 80485a8:	90                   	nop
 80485a9:	90                   	nop
 80485aa:	90                   	nop
 80485ab:	90                   	nop
 80485ac:	90                   	nop
 80485ad:	90                   	nop
 80485ae:	90                   	nop
 80485af:	90                   	nop

080485b0 <__do_global_dtors_aux> (File Offset: 0x5b0):
 80485b0:	55                   	push   %ebp
 80485b1:	89 e5                	mov    %esp,%ebp
 80485b3:	53                   	push   %ebx
 80485b4:	83 ec 04             	sub    $0x4,%esp
 80485b7:	80 3d 94 a1 04 08 00 	cmpb   $0x0,0x804a194
 80485be:	75 3f                	jne    80485ff <__do_global_dtors_aux+0x4f> (File Offset: 0x5ff)
 80485c0:	a1 98 a1 04 08       	mov    0x804a198,%eax
 80485c5:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 80485ca:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 80485d0:	c1 fb 02             	sar    $0x2,%ebx
 80485d3:	83 eb 01             	sub    $0x1,%ebx
 80485d6:	39 d8                	cmp    %ebx,%eax
 80485d8:	73 1e                	jae    80485f8 <__do_global_dtors_aux+0x48> (File Offset: 0x5f8)
 80485da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485e0:	83 c0 01             	add    $0x1,%eax
 80485e3:	a3 98 a1 04 08       	mov    %eax,0x804a198
 80485e8:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 80485ef:	a1 98 a1 04 08       	mov    0x804a198,%eax
 80485f4:	39 d8                	cmp    %ebx,%eax
 80485f6:	72 e8                	jb     80485e0 <__do_global_dtors_aux+0x30> (File Offset: 0x5e0)
 80485f8:	c6 05 94 a1 04 08 01 	movb   $0x1,0x804a194
 80485ff:	83 c4 04             	add    $0x4,%esp
 8048602:	5b                   	pop    %ebx
 8048603:	5d                   	pop    %ebp
 8048604:	c3                   	ret    
 8048605:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048609:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048610 <frame_dummy> (File Offset: 0x610):
 8048610:	55                   	push   %ebp
 8048611:	89 e5                	mov    %esp,%ebp
 8048613:	83 ec 18             	sub    $0x18,%esp
 8048616:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804861b:	85 c0                	test   %eax,%eax
 804861d:	74 12                	je     8048631 <frame_dummy+0x21> (File Offset: 0x631)
 804861f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048624:	85 c0                	test   %eax,%eax
 8048626:	74 09                	je     8048631 <frame_dummy+0x21> (File Offset: 0x631)
 8048628:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 804862f:	ff d0                	call   *%eax
 8048631:	c9                   	leave  
 8048632:	c3                   	ret    
 8048633:	90                   	nop

08048634 <print_binary2src> (File Offset: 0x634):
 8048634:	55                   	push   %ebp
 8048635:	89 e5                	mov    %esp,%ebp
 8048637:	83 ec 28             	sub    $0x28,%esp
 804863a:	c7 04 24 22 00 00 00 	movl   $0x22,(%esp)
 8048641:	e8 2a ff ff ff       	call   8048570 <putchar@plt> (File Offset: 0x570)
 8048646:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804864d:	eb 21                	jmp    8048670 <print_binary2src+0x3c> (File Offset: 0x670)
 804864f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048652:	03 45 08             	add    0x8(%ebp),%eax
 8048655:	0f b6 00             	movzbl (%eax),%eax
 8048658:	0f b6 d0             	movzbl %al,%edx
 804865b:	b8 3a 8c 04 08       	mov    $0x8048c3a,%eax
 8048660:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048664:	89 04 24             	mov    %eax,(%esp)
 8048667:	e8 44 fe ff ff       	call   80484b0 <printf@plt> (File Offset: 0x4b0)
 804866c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8048670:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048673:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8048676:	7c d7                	jl     804864f <print_binary2src+0x1b> (File Offset: 0x64f)
 8048678:	c7 04 24 22 00 00 00 	movl   $0x22,(%esp)
 804867f:	e8 ec fe ff ff       	call   8048570 <putchar@plt> (File Offset: 0x570)
 8048684:	c9                   	leave  
 8048685:	c3                   	ret    

08048686 <print_elf_header> (File Offset: 0x686):
 8048686:	55                   	push   %ebp
 8048687:	89 e5                	mov    %esp,%ebp
 8048689:	83 ec 28             	sub    $0x28,%esp
 804868c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8048693:	c7 04 24 3f 8c 04 08 	movl   $0x8048c3f,(%esp)
 804869a:	e8 71 fe ff ff       	call   8048510 <puts@plt> (File Offset: 0x510)
 804869f:	b8 59 8c 04 08       	mov    $0x8048c59,%eax
 80486a4:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80486a7:	89 54 24 04          	mov    %edx,0x4(%esp)
 80486ab:	89 04 24             	mov    %eax,(%esp)
 80486ae:	e8 fd fd ff ff       	call   80484b0 <printf@plt> (File Offset: 0x4b0)
 80486b3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80486ba:	eb 23                	jmp    80486df <print_elf_header+0x59> (File Offset: 0x6df)
 80486bc:	8b 55 08             	mov    0x8(%ebp),%edx
 80486bf:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80486c2:	01 d0                	add    %edx,%eax
 80486c4:	0f b6 00             	movzbl (%eax),%eax
 80486c7:	0f b6 d0             	movzbl %al,%edx
 80486ca:	b8 3a 8c 04 08       	mov    $0x8048c3a,%eax
 80486cf:	89 54 24 04          	mov    %edx,0x4(%esp)
 80486d3:	89 04 24             	mov    %eax,(%esp)
 80486d6:	e8 d5 fd ff ff       	call   80484b0 <printf@plt> (File Offset: 0x4b0)
 80486db:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 80486df:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
 80486e3:	7e d7                	jle    80486bc <print_elf_header+0x36> (File Offset: 0x6bc)
 80486e5:	c7 04 24 66 8c 04 08 	movl   $0x8048c66,(%esp)
 80486ec:	e8 1f fe ff ff       	call   8048510 <puts@plt> (File Offset: 0x510)
 80486f1:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80486f4:	83 c0 10             	add    $0x10,%eax
 80486f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80486fa:	8b 45 08             	mov    0x8(%ebp),%eax
 80486fd:	0f b7 40 10          	movzwl 0x10(%eax),%eax
 8048701:	66 83 f8 04          	cmp    $0x4,%ax
 8048705:	77 1c                	ja     8048723 <print_elf_header+0x9d> (File Offset: 0x723)
 8048707:	8b 45 08             	mov    0x8(%ebp),%eax
 804870a:	0f b7 40 10          	movzwl 0x10(%eax),%eax
 804870e:	0f b7 d0             	movzwl %ax,%edx
 8048711:	89 d0                	mov    %edx,%eax
 8048713:	01 c0                	add    %eax,%eax
 8048715:	01 d0                	add    %edx,%eax
 8048717:	c1 e0 02             	shl    $0x2,%eax
 804871a:	05 60 a0 04 08       	add    $0x804a060,%eax
 804871f:	8b 00                	mov    (%eax),%eax
 8048721:	eb 05                	jmp    8048728 <print_elf_header+0xa2> (File Offset: 0x728)
 8048723:	b8 69 8c 04 08       	mov    $0x8048c69,%eax
 8048728:	8b 55 08             	mov    0x8(%ebp),%edx
 804872b:	0f b7 52 10          	movzwl 0x10(%edx),%edx
 804872f:	0f b7 ca             	movzwl %dx,%ecx
 8048732:	ba 76 8c 04 08       	mov    $0x8048c76,%edx
 8048737:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804873b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804873f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048742:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048746:	89 14 24             	mov    %edx,(%esp)
 8048749:	e8 62 fd ff ff       	call   80484b0 <printf@plt> (File Offset: 0x4b0)
 804874e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048751:	83 c0 02             	add    $0x2,%eax
 8048754:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048757:	8b 45 08             	mov    0x8(%ebp),%eax
 804875a:	0f b7 40 12          	movzwl 0x12(%eax),%eax
 804875e:	66 83 f8 07          	cmp    $0x7,%ax
 8048762:	77 1c                	ja     8048780 <print_elf_header+0xfa> (File Offset: 0x780)
 8048764:	8b 45 08             	mov    0x8(%ebp),%eax
 8048767:	0f b7 40 12          	movzwl 0x12(%eax),%eax
 804876b:	0f b7 d0             	movzwl %ax,%edx
 804876e:	89 d0                	mov    %edx,%eax
 8048770:	01 c0                	add    %eax,%eax
 8048772:	01 d0                	add    %edx,%eax
 8048774:	c1 e0 02             	shl    $0x2,%eax
 8048777:	05 a0 a0 04 08       	add    $0x804a0a0,%eax
 804877c:	8b 00                	mov    (%eax),%eax
 804877e:	eb 05                	jmp    8048785 <print_elf_header+0xff> (File Offset: 0x785)
 8048780:	b8 8f 8c 04 08       	mov    $0x8048c8f,%eax
 8048785:	8b 55 08             	mov    0x8(%ebp),%edx
 8048788:	0f b7 52 12          	movzwl 0x12(%edx),%edx
 804878c:	0f b7 ca             	movzwl %dx,%ecx
 804878f:	ba 76 8c 04 08       	mov    $0x8048c76,%edx
 8048794:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048798:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804879c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804879f:	89 44 24 04          	mov    %eax,0x4(%esp)
 80487a3:	89 14 24             	mov    %edx,(%esp)
 80487a6:	e8 05 fd ff ff       	call   80484b0 <printf@plt> (File Offset: 0x4b0)
 80487ab:	c9                   	leave  
 80487ac:	c3                   	ret    

080487ad <test> (File Offset: 0x7ad):
 80487ad:	55                   	push   %ebp
 80487ae:	89 e5                	mov    %esp,%ebp
 80487b0:	83 ec 58             	sub    $0x58,%esp
 80487b3:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80487b9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80487bc:	31 c0                	xor    %eax,%eax
 80487be:	c7 45 c0 31 32 33 34 	movl   $0x34333231,-0x40(%ebp)
 80487c5:	c7 45 c4 35 36 37 38 	movl   $0x38373635,-0x3c(%ebp)
 80487cc:	c7 45 c8 39 30 31 32 	movl   $0x32313039,-0x38(%ebp)
 80487d3:	c7 45 cc 33 34 35 36 	movl   $0x36353433,-0x34(%ebp)
 80487da:	66 c7 45 d0 01 00    	movw   $0x1,-0x30(%ebp)
 80487e0:	66 c7 45 d2 01 00    	movw   $0x1,-0x2e(%ebp)
 80487e6:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
 80487ed:	c7 45 d8 20 30 80 00 	movl   $0x803020,-0x28(%ebp)
 80487f4:	c7 45 dc 50 00 00 00 	movl   $0x50,-0x24(%ebp)
 80487fb:	c7 45 e0 70 00 00 00 	movl   $0x70,-0x20(%ebp)
 8048802:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 8048809:	66 c7 45 e8 1e 00    	movw   $0x1e,-0x18(%ebp)
 804880f:	66 c7 45 ea 32 00    	movw   $0x32,-0x16(%ebp)
 8048815:	66 c7 45 ec 64 00    	movw   $0x64,-0x14(%ebp)
 804881b:	66 c7 45 ee 01 00    	movw   $0x1,-0x12(%ebp)
 8048821:	66 c7 45 f0 02 00    	movw   $0x2,-0x10(%ebp)
 8048827:	66 c7 45 f2 03 00    	movw   $0x3,-0xe(%ebp)
 804882d:	8b 55 d8             	mov    -0x28(%ebp),%edx
 8048830:	b8 9f 8c 04 08       	mov    $0x8048c9f,%eax
 8048835:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048839:	89 04 24             	mov    %eax,(%esp)
 804883c:	e8 6f fc ff ff       	call   80484b0 <printf@plt> (File Offset: 0x4b0)
 8048841:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048844:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804884b:	74 05                	je     8048852 <test+0xa5> (File Offset: 0x852)
 804884d:	e8 7e fc ff ff       	call   80484d0 <__stack_chk_fail@plt> (File Offset: 0x4d0)
 8048852:	c9                   	leave  
 8048853:	c3                   	ret    

08048854 <main> (File Offset: 0x854):
 8048854:	55                   	push   %ebp
 8048855:	89 e5                	mov    %esp,%ebp
 8048857:	83 e4 f0             	and    $0xfffffff0,%esp
 804885a:	83 c4 80             	add    $0xffffff80,%esp
 804885d:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 8048861:	7f 0c                	jg     804886f <main+0x1b> (File Offset: 0x86f)
 8048863:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804886a:	e8 c1 fc ff ff       	call   8048530 <exit@plt> (File Offset: 0x530)
 804886f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048872:	83 c0 04             	add    $0x4,%eax
 8048875:	8b 00                	mov    (%eax),%eax
 8048877:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804887e:	00 
 804887f:	89 04 24             	mov    %eax,(%esp)
 8048882:	e8 b9 fc ff ff       	call   8048540 <open@plt> (File Offset: 0x540)
 8048887:	89 44 24 70          	mov    %eax,0x70(%esp)
 804888b:	83 7c 24 70 ff       	cmpl   $0xffffffff,0x70(%esp)
 8048890:	75 22                	jne    80488b4 <main+0x60> (File Offset: 0x8b4)
 8048892:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048895:	83 c0 04             	add    $0x4,%eax
 8048898:	8b 08                	mov    (%eax),%ecx
 804889a:	ba a3 8c 04 08       	mov    $0x8048ca3,%edx
 804889f:	a1 90 a1 04 08       	mov    0x804a190,%eax
 80488a4:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80488a8:	89 54 24 04          	mov    %edx,0x4(%esp)
 80488ac:	89 04 24             	mov    %eax,(%esp)
 80488af:	e8 ac fc ff ff       	call   8048560 <fprintf@plt> (File Offset: 0x560)
 80488b4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80488b7:	83 c0 04             	add    $0x4,%eax
 80488ba:	8b 00                	mov    (%eax),%eax
 80488bc:	8d 54 24 18          	lea    0x18(%esp),%edx
 80488c0:	89 54 24 04          	mov    %edx,0x4(%esp)
 80488c4:	89 04 24             	mov    %eax,(%esp)
 80488c7:	e8 64 01 00 00       	call   8048a30 <__stat> (File Offset: 0xa30)
 80488cc:	83 f8 ff             	cmp    $0xffffffff,%eax
 80488cf:	75 2e                	jne    80488ff <main+0xab> (File Offset: 0x8ff)
 80488d1:	8b 45 0c             	mov    0xc(%ebp),%eax
 80488d4:	83 c0 04             	add    $0x4,%eax
 80488d7:	8b 08                	mov    (%eax),%ecx
 80488d9:	ba bb 8c 04 08       	mov    $0x8048cbb,%edx
 80488de:	a1 90 a1 04 08       	mov    0x804a190,%eax
 80488e3:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80488e7:	89 54 24 04          	mov    %edx,0x4(%esp)
 80488eb:	89 04 24             	mov    %eax,(%esp)
 80488ee:	e8 6d fc ff ff       	call   8048560 <fprintf@plt> (File Offset: 0x560)
 80488f3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80488fa:	e8 31 fc ff ff       	call   8048530 <exit@plt> (File Offset: 0x530)
 80488ff:	8b 44 24 44          	mov    0x44(%esp),%eax
 8048903:	c1 e0 02             	shl    $0x2,%eax
 8048906:	89 04 24             	mov    %eax,(%esp)
 8048909:	e8 f2 fb ff ff       	call   8048500 <malloc@plt> (File Offset: 0x500)
 804890e:	89 44 24 74          	mov    %eax,0x74(%esp)
 8048912:	8b 44 24 44          	mov    0x44(%esp),%eax
 8048916:	89 44 24 08          	mov    %eax,0x8(%esp)
 804891a:	8b 44 24 74          	mov    0x74(%esp),%eax
 804891e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048922:	8b 44 24 70          	mov    0x70(%esp),%eax
 8048926:	89 04 24             	mov    %eax,(%esp)
 8048929:	e8 72 fb ff ff       	call   80484a0 <read@plt> (File Offset: 0x4a0)
 804892e:	89 44 24 78          	mov    %eax,0x78(%esp)
 8048932:	8b 44 24 44          	mov    0x44(%esp),%eax
 8048936:	39 44 24 78          	cmp    %eax,0x78(%esp)
 804893a:	74 3e                	je     804897a <main+0x126> (File Offset: 0x97a)
 804893c:	8b 4c 24 44          	mov    0x44(%esp),%ecx
 8048940:	ba d4 8c 04 08       	mov    $0x8048cd4,%edx
 8048945:	a1 90 a1 04 08       	mov    0x804a190,%eax
 804894a:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 804894e:	8b 4c 24 78          	mov    0x78(%esp),%ecx
 8048952:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8048956:	89 54 24 04          	mov    %edx,0x4(%esp)
 804895a:	89 04 24             	mov    %eax,(%esp)
 804895d:	e8 fe fb ff ff       	call   8048560 <fprintf@plt> (File Offset: 0x560)
 8048962:	c7 04 24 ff 8c 04 08 	movl   $0x8048cff,(%esp)
 8048969:	e8 82 fb ff ff       	call   80484f0 <perror@plt> (File Offset: 0x4f0)
 804896e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048975:	e8 b6 fb ff ff       	call   8048530 <exit@plt> (File Offset: 0x530)
 804897a:	8b 44 24 74          	mov    0x74(%esp),%eax
 804897e:	89 44 24 7c          	mov    %eax,0x7c(%esp)
 8048982:	8b 44 24 7c          	mov    0x7c(%esp),%eax
 8048986:	89 04 24             	mov    %eax,(%esp)
 8048989:	e8 f8 fc ff ff       	call   8048686 <print_elf_header> (File Offset: 0x686)
 804898e:	8b 44 24 74          	mov    0x74(%esp),%eax
 8048992:	89 04 24             	mov    %eax,(%esp)
 8048995:	e8 26 fb ff ff       	call   80484c0 <free@plt> (File Offset: 0x4c0)
 804899a:	b8 00 00 00 00       	mov    $0x0,%eax
 804899f:	c9                   	leave  
 80489a0:	c3                   	ret    
 80489a1:	90                   	nop
 80489a2:	90                   	nop
 80489a3:	90                   	nop
 80489a4:	90                   	nop
 80489a5:	90                   	nop
 80489a6:	90                   	nop
 80489a7:	90                   	nop
 80489a8:	90                   	nop
 80489a9:	90                   	nop
 80489aa:	90                   	nop
 80489ab:	90                   	nop
 80489ac:	90                   	nop
 80489ad:	90                   	nop
 80489ae:	90                   	nop
 80489af:	90                   	nop

080489b0 <__libc_csu_init> (File Offset: 0x9b0):
 80489b0:	55                   	push   %ebp
 80489b1:	57                   	push   %edi
 80489b2:	56                   	push   %esi
 80489b3:	53                   	push   %ebx
 80489b4:	e8 69 00 00 00       	call   8048a22 <__i686.get_pc_thunk.bx> (File Offset: 0xa22)
 80489b9:	81 c3 3b 16 00 00    	add    $0x163b,%ebx
 80489bf:	83 ec 1c             	sub    $0x1c,%esp
 80489c2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80489c6:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 80489cc:	e8 87 fa ff ff       	call   8048458 <_init> (File Offset: 0x458)
 80489d1:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 80489d7:	29 c7                	sub    %eax,%edi
 80489d9:	c1 ff 02             	sar    $0x2,%edi
 80489dc:	85 ff                	test   %edi,%edi
 80489de:	74 29                	je     8048a09 <__libc_csu_init+0x59> (File Offset: 0xa09)
 80489e0:	31 f6                	xor    %esi,%esi
 80489e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80489e8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80489ec:	89 2c 24             	mov    %ebp,(%esp)
 80489ef:	89 44 24 08          	mov    %eax,0x8(%esp)
 80489f3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80489f7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80489fb:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048a02:	83 c6 01             	add    $0x1,%esi
 8048a05:	39 fe                	cmp    %edi,%esi
 8048a07:	75 df                	jne    80489e8 <__libc_csu_init+0x38> (File Offset: 0x9e8)
 8048a09:	83 c4 1c             	add    $0x1c,%esp
 8048a0c:	5b                   	pop    %ebx
 8048a0d:	5e                   	pop    %esi
 8048a0e:	5f                   	pop    %edi
 8048a0f:	5d                   	pop    %ebp
 8048a10:	c3                   	ret    
 8048a11:	eb 0d                	jmp    8048a20 <__libc_csu_fini> (File Offset: 0xa20)
 8048a13:	90                   	nop
 8048a14:	90                   	nop
 8048a15:	90                   	nop
 8048a16:	90                   	nop
 8048a17:	90                   	nop
 8048a18:	90                   	nop
 8048a19:	90                   	nop
 8048a1a:	90                   	nop
 8048a1b:	90                   	nop
 8048a1c:	90                   	nop
 8048a1d:	90                   	nop
 8048a1e:	90                   	nop
 8048a1f:	90                   	nop

08048a20 <__libc_csu_fini> (File Offset: 0xa20):
 8048a20:	f3 c3                	repz ret 

08048a22 <__i686.get_pc_thunk.bx> (File Offset: 0xa22):
 8048a22:	8b 1c 24             	mov    (%esp),%ebx
 8048a25:	c3                   	ret    
 8048a26:	90                   	nop
 8048a27:	90                   	nop
 8048a28:	90                   	nop
 8048a29:	90                   	nop
 8048a2a:	90                   	nop
 8048a2b:	90                   	nop
 8048a2c:	90                   	nop
 8048a2d:	90                   	nop
 8048a2e:	90                   	nop
 8048a2f:	90                   	nop

08048a30 <__stat> (File Offset: 0xa30):
 8048a30:	53                   	push   %ebx
 8048a31:	83 ec 0c             	sub    $0xc,%esp
 8048a34:	8b 44 24 18          	mov    0x18(%esp),%eax
 8048a38:	e8 e5 ff ff ff       	call   8048a22 <__i686.get_pc_thunk.bx> (File Offset: 0xa22)
 8048a3d:	81 c3 b7 15 00 00    	add    $0x15b7,%ebx
 8048a43:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8048a4a:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048a4e:	8b 44 24 14          	mov    0x14(%esp),%eax
 8048a52:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048a56:	e8 85 fa ff ff       	call   80484e0 <__xstat@plt> (File Offset: 0x4e0)
 8048a5b:	83 c4 0c             	add    $0xc,%esp
 8048a5e:	5b                   	pop    %ebx
 8048a5f:	c3                   	ret    

08048a60 <__do_global_ctors_aux> (File Offset: 0xa60):
 8048a60:	55                   	push   %ebp
 8048a61:	89 e5                	mov    %esp,%ebp
 8048a63:	53                   	push   %ebx
 8048a64:	83 ec 04             	sub    $0x4,%esp
 8048a67:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 8048a6c:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048a6f:	74 13                	je     8048a84 <__do_global_ctors_aux+0x24> (File Offset: 0xa84)
 8048a71:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 8048a76:	66 90                	xchg   %ax,%ax
 8048a78:	83 eb 04             	sub    $0x4,%ebx
 8048a7b:	ff d0                	call   *%eax
 8048a7d:	8b 03                	mov    (%ebx),%eax
 8048a7f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048a82:	75 f4                	jne    8048a78 <__do_global_ctors_aux+0x18> (File Offset: 0xa78)
 8048a84:	83 c4 04             	add    $0x4,%esp
 8048a87:	5b                   	pop    %ebx
 8048a88:	5d                   	pop    %ebp
 8048a89:	c3                   	ret    
 8048a8a:	90                   	nop
 8048a8b:	90                   	nop

Disassembly of section .fini:

08048a8c <_fini> (File Offset: 0xa8c):
 8048a8c:	53                   	push   %ebx
 8048a8d:	83 ec 08             	sub    $0x8,%esp
 8048a90:	e8 00 00 00 00       	call   8048a95 <_fini+0x9> (File Offset: 0xa95)
 8048a95:	5b                   	pop    %ebx
 8048a96:	81 c3 5f 15 00 00    	add    $0x155f,%ebx
 8048a9c:	e8 0f fb ff ff       	call   80485b0 <__do_global_dtors_aux> (File Offset: 0x5b0)
 8048aa1:	83 c4 08             	add    $0x8,%esp
 8048aa4:	5b                   	pop    %ebx
 8048aa5:	c3                   	ret    

Disassembly of section .rodata:

08048aa8 <_fp_hw> (File Offset: 0xaa8):
 8048aa8:	03 00                	add    (%eax),%eax
	...

08048aac <_IO_stdin_used> (File Offset: 0xaac):
 8048aac:	01 00                	add    %eax,(%eax)
 8048aae:	02 00                	add    (%eax),%al
 8048ab0:	45                   	inc    %ebp
 8048ab1:	54                   	push   %esp
 8048ab2:	5f                   	pop    %edi
 8048ab3:	4e                   	dec    %esi
 8048ab4:	4f                   	dec    %edi
 8048ab5:	4e                   	dec    %esi
 8048ab6:	45                   	inc    %ebp
 8048ab7:	00 4e 6f             	add    %cl,0x6f(%esi)
 8048aba:	20 66 69             	and    %ah,0x69(%esi)
 8048abd:	6c                   	insb   (%dx),%es:(%edi)
 8048abe:	65 20 74 79 70       	and    %dh,%gs:0x70(%ecx,%edi,2)
 8048ac3:	65 00 45 54          	add    %al,%gs:0x54(%ebp)
 8048ac7:	5f                   	pop    %edi
 8048ac8:	52                   	push   %edx
 8048ac9:	45                   	inc    %ebp
 8048aca:	4c                   	dec    %esp
 8048acb:	00 52 65             	add    %dl,0x65(%edx)
 8048ace:	6c                   	insb   (%dx),%es:(%edi)
 8048acf:	6f                   	outsl  %ds:(%esi),(%dx)
 8048ad0:	63 61 74             	arpl   %sp,0x74(%ecx)
 8048ad3:	61                   	popa   
 8048ad4:	62 6c 65 20          	bound  %ebp,0x20(%ebp,%eiz,2)
 8048ad8:	66 69 6c 65 00 45 54 	imul   $0x5445,0x0(%ebp,%eiz,2),%bp
 8048adf:	5f                   	pop    %edi
 8048ae0:	45                   	inc    %ebp
 8048ae1:	58                   	pop    %eax
 8048ae2:	45                   	inc    %ebp
 8048ae3:	43                   	inc    %ebx
 8048ae4:	00 45 78             	add    %al,0x78(%ebp)
 8048ae7:	65 63 75 74          	arpl   %si,%gs:0x74(%ebp)
 8048aeb:	61                   	popa   
 8048aec:	62 6c 65 20          	bound  %ebp,0x20(%ebp,%eiz,2)
 8048af0:	66 69 6c 65 00 45 54 	imul   $0x5445,0x0(%ebp,%eiz,2),%bp
 8048af7:	5f                   	pop    %edi
 8048af8:	44                   	inc    %esp
 8048af9:	59                   	pop    %ecx
 8048afa:	4e                   	dec    %esi
 8048afb:	00 53 68             	add    %dl,0x68(%ebx)
 8048afe:	61                   	popa   
 8048aff:	72 65                	jb     8048b66 <_IO_stdin_used+0xba> (File Offset: 0xb66)
 8048b01:	64 20 4f 62          	and    %cl,%fs:0x62(%edi)
 8048b05:	6a 65                	push   $0x65
 8048b07:	63 74 20 66          	arpl   %si,0x66(%eax,%eiz,1)
 8048b0b:	69 6c 65 00 45 54 5f 	imul   $0x435f5445,0x0(%ebp,%eiz,2),%ebp
 8048b12:	43 
 8048b13:	4f                   	dec    %edi
 8048b14:	52                   	push   %edx
 8048b15:	45                   	inc    %ebp
 8048b16:	00 43 6f             	add    %al,0x6f(%ebx)
 8048b19:	72 65                	jb     8048b80 <_IO_stdin_used+0xd4> (File Offset: 0xb80)
 8048b1b:	20 66 69             	and    %ah,0x69(%esi)
 8048b1e:	6c                   	insb   (%dx),%es:(%edi)
 8048b1f:	65 00 45 4d          	add    %al,%gs:0x4d(%ebp)
 8048b23:	5f                   	pop    %edi
 8048b24:	4e                   	dec    %esi
 8048b25:	4f                   	dec    %edi
 8048b26:	4e                   	dec    %esi
 8048b27:	45                   	inc    %ebp
 8048b28:	00 4e 6f             	add    %cl,0x6f(%esi)
 8048b2b:	20 6d 61             	and    %ch,0x61(%ebp)
 8048b2e:	63 68 69             	arpl   %bp,0x69(%eax)
 8048b31:	6e                   	outsb  %ds:(%esi),(%dx)
 8048b32:	65 00 45 4d          	add    %al,%gs:0x4d(%ebp)
 8048b36:	5f                   	pop    %edi
 8048b37:	4d                   	dec    %ebp
 8048b38:	33 32                	xor    (%edx),%esi
 8048b3a:	00 41 54             	add    %al,0x54(%ecx)
 8048b3d:	26                   	es
 8048b3e:	54                   	push   %esp
 8048b3f:	20 57 45             	and    %dl,0x45(%edi)
 8048b42:	20 33                	and    %dh,(%ebx)
 8048b44:	32 31                	xor    (%ecx),%dh
 8048b46:	30 30                	xor    %dh,(%eax)
 8048b48:	00 45 4d             	add    %al,0x4d(%ebp)
 8048b4b:	5f                   	pop    %edi
 8048b4c:	53                   	push   %ebx
 8048b4d:	50                   	push   %eax
 8048b4e:	41                   	inc    %ecx
 8048b4f:	52                   	push   %edx
 8048b50:	43                   	inc    %ebx
 8048b51:	00 53 50             	add    %dl,0x50(%ebx)
 8048b54:	41                   	inc    %ecx
 8048b55:	52                   	push   %edx
 8048b56:	43                   	inc    %ebx
 8048b57:	00 45 4d             	add    %al,0x4d(%ebp)
 8048b5a:	5f                   	pop    %edi
 8048b5b:	33 38                	xor    (%eax),%edi
 8048b5d:	36 00 49 6e          	add    %cl,%ss:0x6e(%ecx)
 8048b61:	74 65                	je     8048bc8 <_IO_stdin_used+0x11c> (File Offset: 0xbc8)
 8048b63:	6c                   	insb   (%dx),%es:(%edi)
 8048b64:	20 38                	and    %bh,(%eax)
 8048b66:	30 33                	xor    %dh,(%ebx)
 8048b68:	38 36                	cmp    %dh,(%esi)
 8048b6a:	00 45 4d             	add    %al,0x4d(%ebp)
 8048b6d:	5f                   	pop    %edi
 8048b6e:	36 38 4b 00          	cmp    %cl,%ss:0x0(%ebx)
 8048b72:	4d                   	dec    %ebp
 8048b73:	6f                   	outsl  %ds:(%esi),(%dx)
 8048b74:	74 6f                	je     8048be5 <_IO_stdin_used+0x139> (File Offset: 0xbe5)
 8048b76:	72 6f                	jb     8048be7 <_IO_stdin_used+0x13b> (File Offset: 0xbe7)
 8048b78:	6c                   	insb   (%dx),%es:(%edi)
 8048b79:	61                   	popa   
 8048b7a:	20 36                	and    %dh,(%esi)
 8048b7c:	38 30                	cmp    %dh,(%eax)
 8048b7e:	30 30                	xor    %dh,(%eax)
 8048b80:	00 45 4d             	add    %al,0x4d(%ebp)
 8048b83:	5f                   	pop    %edi
 8048b84:	38 38                	cmp    %bh,(%eax)
 8048b86:	4b                   	dec    %ebx
 8048b87:	00 4d 6f             	add    %cl,0x6f(%ebp)
 8048b8a:	74 6f                	je     8048bfb <_IO_stdin_used+0x14f> (File Offset: 0xbfb)
 8048b8c:	72 6f                	jb     8048bfd <_IO_stdin_used+0x151> (File Offset: 0xbfd)
 8048b8e:	6c                   	insb   (%dx),%es:(%edi)
 8048b8f:	61                   	popa   
 8048b90:	20 38                	and    %bh,(%eax)
 8048b92:	38 30                	cmp    %dh,(%eax)
 8048b94:	30 30                	xor    %dh,(%eax)
 8048b96:	00 45 4d             	add    %al,0x4d(%ebp)
 8048b99:	5f                   	pop    %edi
 8048b9a:	38 36                	cmp    %dh,(%esi)
 8048b9c:	30 00                	xor    %al,(%eax)
 8048b9e:	49                   	dec    %ecx
 8048b9f:	6e                   	outsb  %ds:(%esi),(%dx)
 8048ba0:	74 65                	je     8048c07 <_IO_stdin_used+0x15b> (File Offset: 0xc07)
 8048ba2:	6c                   	insb   (%dx),%es:(%edi)
 8048ba3:	20 38                	and    %bh,(%eax)
 8048ba5:	30 38                	xor    %bh,(%eax)
 8048ba7:	36 30 00             	xor    %al,%ss:(%eax)
 8048baa:	45                   	inc    %ebp
 8048bab:	4d                   	dec    %ebp
 8048bac:	5f                   	pop    %edi
 8048bad:	4d                   	dec    %ebp
 8048bae:	49                   	dec    %ecx
 8048baf:	50                   	push   %eax
 8048bb0:	53                   	push   %ebx
 8048bb1:	00 4d 49             	add    %cl,0x49(%ebp)
 8048bb4:	50                   	push   %eax
 8048bb5:	53                   	push   %ebx
 8048bb6:	20 52 53             	and    %dl,0x53(%edx)
 8048bb9:	33 30                	xor    (%eax),%esi
 8048bbb:	30 30                	xor    %dh,(%eax)
 8048bbd:	00 53 48             	add    %dl,0x48(%ebx)
 8048bc0:	54                   	push   %esp
 8048bc1:	5f                   	pop    %edi
 8048bc2:	4e                   	dec    %esi
 8048bc3:	55                   	push   %ebp
 8048bc4:	4c                   	dec    %esp
 8048bc5:	4c                   	dec    %esp
 8048bc6:	00 00                	add    %al,(%eax)
 8048bc8:	53                   	push   %ebx
 8048bc9:	48                   	dec    %eax
 8048bca:	54                   	push   %esp
 8048bcb:	5f                   	pop    %edi
 8048bcc:	50                   	push   %eax
 8048bcd:	52                   	push   %edx
 8048bce:	4f                   	dec    %edi
 8048bcf:	47                   	inc    %edi
 8048bd0:	42                   	inc    %edx
 8048bd1:	49                   	dec    %ecx
 8048bd2:	54                   	push   %esp
 8048bd3:	53                   	push   %ebx
 8048bd4:	00 53 48             	add    %dl,0x48(%ebx)
 8048bd7:	54                   	push   %esp
 8048bd8:	5f                   	pop    %edi
 8048bd9:	53                   	push   %ebx
 8048bda:	59                   	pop    %ecx
 8048bdb:	4d                   	dec    %ebp
 8048bdc:	54                   	push   %esp
 8048bdd:	41                   	inc    %ecx
 8048bde:	42                   	inc    %edx
 8048bdf:	00 53 48             	add    %dl,0x48(%ebx)
 8048be2:	54                   	push   %esp
 8048be3:	5f                   	pop    %edi
 8048be4:	53                   	push   %ebx
 8048be5:	54                   	push   %esp
 8048be6:	52                   	push   %edx
 8048be7:	54                   	push   %esp
 8048be8:	41                   	inc    %ecx
 8048be9:	42                   	inc    %edx
 8048bea:	00 53 48             	add    %dl,0x48(%ebx)
 8048bed:	54                   	push   %esp
 8048bee:	5f                   	pop    %edi
 8048bef:	52                   	push   %edx
 8048bf0:	45                   	inc    %ebp
 8048bf1:	4c                   	dec    %esp
 8048bf2:	41                   	inc    %ecx
 8048bf3:	00 53 48             	add    %dl,0x48(%ebx)
 8048bf6:	54                   	push   %esp
 8048bf7:	5f                   	pop    %edi
 8048bf8:	48                   	dec    %eax
 8048bf9:	41                   	inc    %ecx
 8048bfa:	53                   	push   %ebx
 8048bfb:	48                   	dec    %eax
 8048bfc:	00 53 48             	add    %dl,0x48(%ebx)
 8048bff:	54                   	push   %esp
 8048c00:	5f                   	pop    %edi
 8048c01:	44                   	inc    %esp
 8048c02:	59                   	pop    %ecx
 8048c03:	4e                   	dec    %esi
 8048c04:	41                   	inc    %ecx
 8048c05:	4d                   	dec    %ebp
 8048c06:	49                   	dec    %ecx
 8048c07:	43                   	inc    %ebx
 8048c08:	00 53 48             	add    %dl,0x48(%ebx)
 8048c0b:	54                   	push   %esp
 8048c0c:	5f                   	pop    %edi
 8048c0d:	4e                   	dec    %esi
 8048c0e:	4f                   	dec    %edi
 8048c0f:	54                   	push   %esp
 8048c10:	45                   	inc    %ebp
 8048c11:	00 53 48             	add    %dl,0x48(%ebx)
 8048c14:	54                   	push   %esp
 8048c15:	5f                   	pop    %edi
 8048c16:	4e                   	dec    %esi
 8048c17:	4f                   	dec    %edi
 8048c18:	42                   	inc    %edx
 8048c19:	49                   	dec    %ecx
 8048c1a:	54                   	push   %esp
 8048c1b:	53                   	push   %ebx
 8048c1c:	00 53 48             	add    %dl,0x48(%ebx)
 8048c1f:	54                   	push   %esp
 8048c20:	5f                   	pop    %edi
 8048c21:	52                   	push   %edx
 8048c22:	45                   	inc    %ebp
 8048c23:	4c                   	dec    %esp
 8048c24:	00 53 48             	add    %dl,0x48(%ebx)
 8048c27:	54                   	push   %esp
 8048c28:	5f                   	pop    %edi
 8048c29:	53                   	push   %ebx
 8048c2a:	48                   	dec    %eax
 8048c2b:	4c                   	dec    %esp
 8048c2c:	49                   	dec    %ecx
 8048c2d:	42                   	inc    %edx
 8048c2e:	00 53 48             	add    %dl,0x48(%ebx)
 8048c31:	54                   	push   %esp
 8048c32:	5f                   	pop    %edi
 8048c33:	44                   	inc    %esp
 8048c34:	59                   	pop    %ecx
 8048c35:	4e                   	dec    %esi
 8048c36:	53                   	push   %ebx
 8048c37:	59                   	pop    %ecx
 8048c38:	4d                   	dec    %ebp
 8048c39:	00 5c 78 25          	add    %bl,0x25(%eax,%edi,2)
 8048c3d:	78 00                	js     8048c3f <_IO_stdin_used+0x193> (File Offset: 0xc3f)
 8048c3f:	45                   	inc    %ebp
 8048c40:	6c                   	insb   (%dx),%es:(%edi)
 8048c41:	66 33 32             	xor    (%edx),%si
 8048c44:	5f                   	pop    %edi
 8048c45:	45                   	inc    %ebp
 8048c46:	68 64 72 20 65       	push   $0x65207264
 8048c4b:	6c                   	insb   (%dx),%es:(%edi)
 8048c4c:	66 5f                	pop    %di
 8048c4e:	68 65 61 64 65       	push   $0x65646165
 8048c53:	72 20                	jb     8048c75 <_IO_stdin_used+0x1c9> (File Offset: 0xc75)
 8048c55:	3d 20 7b 00 2f       	cmp    $0x2f007b20,%eax
 8048c5a:	2a 20                	sub    (%eax),%ah
 8048c5c:	25 30 36 78 20       	and    $0x20783630,%eax
 8048c61:	2a 2f                	sub    (%edi),%ch
 8048c63:	09 22                	or     %esp,(%edx)
 8048c65:	00 22                	add    %ah,(%edx)
 8048c67:	2c 00                	sub    $0x0,%al
 8048c69:	55                   	push   %ebp
 8048c6a:	4e                   	dec    %esi
 8048c6b:	4b                   	dec    %ebx
 8048c6c:	4e                   	dec    %esi
 8048c6d:	4f                   	dec    %edi
 8048c6e:	57                   	push   %edi
 8048c6f:	4e                   	dec    %esi
 8048c70:	20 54 59 50          	and    %dl,0x50(%ecx,%ebx,2)
 8048c74:	45                   	inc    %ebp
 8048c75:	00 2f                	add    %ch,(%edi)
 8048c77:	2a 20                	sub    (%eax),%ah
 8048c79:	25 30 36 78 20       	and    $0x20783630,%eax
 8048c7e:	2a 2f                	sub    (%edi),%ch
 8048c80:	09 25 64 2c 09 2f    	or     %esp,0x2f092c64
 8048c86:	2a 20                	sub    (%eax),%ah
 8048c88:	25 73 20 2a 2f       	and    $0x2f2a2073,%eax
 8048c8d:	0a 00                	or     (%eax),%al
 8048c8f:	55                   	push   %ebp
 8048c90:	4e                   	dec    %esi
 8048c91:	4b                   	dec    %ebx
 8048c92:	4e                   	dec    %esi
 8048c93:	4f                   	dec    %edi
 8048c94:	57                   	push   %edi
 8048c95:	4e                   	dec    %esi
 8048c96:	20 4d 41             	and    %cl,0x41(%ebp)
 8048c99:	43                   	inc    %ebx
 8048c9a:	48                   	dec    %eax
 8048c9b:	49                   	dec    %ecx
 8048c9c:	4e                   	dec    %esi
 8048c9d:	45                   	inc    %ebp
 8048c9e:	00 25 64 0a 00 66    	add    %ah,0x66000a64
 8048ca4:	61                   	popa   
 8048ca5:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
 8048cac:	20 
 8048cad:	6f                   	outsl  %ds:(%esi),(%dx)
 8048cae:	70 65                	jo     8048d15 <_IO_stdin_used+0x269> (File Offset: 0xd15)
 8048cb0:	6e                   	outsb  %ds:(%esi),(%dx)
 8048cb1:	20 66 69             	and    %ah,0x69(%esi)
 8048cb4:	6c                   	insb   (%dx),%es:(%edi)
 8048cb5:	65 20 25 73 0a 00 66 	and    %ah,%gs:0x66000a73
 8048cbc:	61                   	popa   
 8048cbd:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
 8048cc4:	20 
 8048cc5:	73 74                	jae    8048d3b <_IO_stdin_used+0x28f> (File Offset: 0xd3b)
 8048cc7:	61                   	popa   
 8048cc8:	74 20                	je     8048cea <_IO_stdin_used+0x23e> (File Offset: 0xcea)
 8048cca:	66 69 6c 65 20 25 73 	imul   $0x7325,0x20(%ebp,%eiz,2),%bp
 8048cd1:	0a 00                	or     (%eax),%al
 8048cd3:	00 66 61             	add    %ah,0x61(%esi)
 8048cd6:	69 6c 65 64 20 74 6f 	imul   $0x206f7420,0x64(%ebp,%eiz,2),%ebp
 8048cdd:	20 
 8048cde:	72 65                	jb     8048d45 <_IO_stdin_used+0x299> (File Offset: 0xd45)
 8048ce0:	61                   	popa   
 8048ce1:	64 20 65 6e          	and    %ah,%fs:0x6e(%ebp)
 8048ce5:	74 69                	je     8048d50 <_IO_stdin_used+0x2a4> (File Offset: 0xd50)
 8048ce7:	72 65                	jb     8048d4e <_IO_stdin_used+0x2a2> (File Offset: 0xd4e)
 8048ce9:	20 66 69             	and    %ah,0x69(%esi)
 8048cec:	6c                   	insb   (%dx),%es:(%edi)
 8048ced:	65 3a 20             	cmp    %gs:(%eax),%ah
 8048cf0:	25 64 2c 20 73       	and    $0x73202c64,%eax
 8048cf5:	69 7a 65 20 3d 20 25 	imul   $0x25203d20,0x65(%edx),%edi
 8048cfc:	64 0a 00             	or     %fs:(%eax),%al
 8048cff:	3a 00                	cmp    (%eax),%al

Disassembly of section .eh_frame_hdr:

08048d04 <.eh_frame_hdr> (File Offset: 0xd04):
 8048d04:	01 1b                	add    %ebx,(%ebx)
 8048d06:	03 3b                	add    (%ebx),%edi
 8048d08:	50                   	push   %eax
 8048d09:	00 00                	add    %al,(%eax)
 8048d0b:	00 09                	add    %cl,(%ecx)
 8048d0d:	00 00                	add    %al,(%eax)
 8048d0f:	00 8c f7 ff ff 6c 00 	add    %cl,0x6cffff(%edi,%esi,8)
 8048d16:	00 00                	add    %al,(%eax)
 8048d18:	30 f9                	xor    %bh,%cl
 8048d1a:	ff                   	(bad)  
 8048d1b:	ff 90 00 00 00 82    	call   *-0x7e000000(%eax)
 8048d21:	f9                   	stc    
 8048d22:	ff                   	(bad)  
 8048d23:	ff b0 00 00 00 a9    	pushl  -0x57000000(%eax)
 8048d29:	fa                   	cli    
 8048d2a:	ff                   	(bad)  
 8048d2b:	ff d0                	call   *%eax
 8048d2d:	00 00                	add    %al,(%eax)
 8048d2f:	00 50 fb             	add    %dl,-0x5(%eax)
 8048d32:	ff                   	(bad)  
 8048d33:	ff f0                	push   %eax
 8048d35:	00 00                	add    %al,(%eax)
 8048d37:	00 ac fc ff ff 10 01 	add    %ch,0x110ffff(%esp,%edi,8)
 8048d3e:	00 00                	add    %al,(%eax)
 8048d40:	1c fd                	sbb    $0xfd,%al
 8048d42:	ff                   	(bad)  
 8048d43:	ff 4c 01 00          	decl   0x0(%ecx,%eax,1)
 8048d47:	00 1e                	add    %bl,(%esi)
 8048d49:	fd                   	std    
 8048d4a:	ff                   	(bad)  
 8048d4b:	ff 60 01             	jmp    *0x1(%eax)
 8048d4e:	00 00                	add    %al,(%eax)
 8048d50:	2c fd                	sub    $0xfd,%al
 8048d52:	ff                   	(bad)  
 8048d53:	ff 74 01 00          	pushl  0x0(%ecx,%eax,1)
	...

Disassembly of section .eh_frame:

08048d58 <__FRAME_END__-0x140> (File Offset: 0xd58):
 8048d58:	14 00                	adc    $0x0,%al
 8048d5a:	00 00                	add    %al,(%eax)
 8048d5c:	00 00                	add    %al,(%eax)
 8048d5e:	00 00                	add    %al,(%eax)
 8048d60:	01 7a 52             	add    %edi,0x52(%edx)
 8048d63:	00 01                	add    %al,(%ecx)
 8048d65:	7c 08                	jl     8048d6f <_IO_stdin_used+0x2c3> (File Offset: 0xd6f)
 8048d67:	01 1b                	add    %ebx,(%ebx)
 8048d69:	0c 04                	or     $0x4,%al
 8048d6b:	04 88                	add    $0x88,%al
 8048d6d:	01 00                	add    %eax,(%eax)
 8048d6f:	00 20                	add    %ah,(%eax)
 8048d71:	00 00                	add    %al,(%eax)
 8048d73:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048d76:	00 00                	add    %al,(%eax)
 8048d78:	18 f7                	sbb    %dh,%bh
 8048d7a:	ff                   	(bad)  
 8048d7b:	ff f0                	push   %eax
 8048d7d:	00 00                	add    %al,(%eax)
 8048d7f:	00 00                	add    %al,(%eax)
 8048d81:	0e                   	push   %cs
 8048d82:	08 46 0e             	or     %al,0xe(%esi)
 8048d85:	0c 4a                	or     $0x4a,%al
 8048d87:	0f 0b                	ud2    
 8048d89:	74 04                	je     8048d8f <_IO_stdin_used+0x2e3> (File Offset: 0xd8f)
 8048d8b:	78 00                	js     8048d8d <_IO_stdin_used+0x2e1> (File Offset: 0xd8d)
 8048d8d:	3f                   	aas    
 8048d8e:	1a 3b                	sbb    (%ebx),%bh
 8048d90:	2a 32                	sub    (%edx),%dh
 8048d92:	24 22                	and    $0x22,%al
 8048d94:	1c 00                	sbb    $0x0,%al
 8048d96:	00 00                	add    %al,(%eax)
 8048d98:	40                   	inc    %eax
 8048d99:	00 00                	add    %al,(%eax)
 8048d9b:	00 98 f8 ff ff 52    	add    %bl,0x52fffff8(%eax)
 8048da1:	00 00                	add    %al,(%eax)
 8048da3:	00 00                	add    %al,(%eax)
 8048da5:	41                   	inc    %ecx
 8048da6:	0e                   	push   %cs
 8048da7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048dad:	02 4e c5             	add    -0x3b(%esi),%cl
 8048db0:	0c 04                	or     $0x4,%al
 8048db2:	04 00                	add    $0x0,%al
 8048db4:	1c 00                	sbb    $0x0,%al
 8048db6:	00 00                	add    %al,(%eax)
 8048db8:	60                   	pusha  
 8048db9:	00 00                	add    %al,(%eax)
 8048dbb:	00 ca                	add    %cl,%dl
 8048dbd:	f8                   	clc    
 8048dbe:	ff                   	(bad)  
 8048dbf:	ff 27                	jmp    *(%edi)
 8048dc1:	01 00                	add    %eax,(%eax)
 8048dc3:	00 00                	add    %al,(%eax)
 8048dc5:	41                   	inc    %ecx
 8048dc6:	0e                   	push   %cs
 8048dc7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048dcd:	03 23                	add    (%ebx),%esp
 8048dcf:	01 c5                	add    %eax,%ebp
 8048dd1:	0c 04                	or     $0x4,%al
 8048dd3:	04 1c                	add    $0x1c,%al
 8048dd5:	00 00                	add    %al,(%eax)
 8048dd7:	00 80 00 00 00 d1    	add    %al,-0x2f000000(%eax)
 8048ddd:	f9                   	stc    
 8048dde:	ff                   	(bad)  
 8048ddf:	ff a7 00 00 00 00    	jmp    *0x0(%edi)
 8048de5:	41                   	inc    %ecx
 8048de6:	0e                   	push   %cs
 8048de7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048ded:	02 a3 c5 0c 04 04    	add    0x4040cc5(%ebx),%ah
 8048df3:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048df6:	00 00                	add    %al,(%eax)
 8048df8:	a0 00 00 00 58       	mov    0x58000000,%al
 8048dfd:	fa                   	cli    
 8048dfe:	ff                   	(bad)  
 8048dff:	ff 4d 01             	decl   0x1(%ebp)
 8048e02:	00 00                	add    %al,(%eax)
 8048e04:	00 41 0e             	add    %al,0xe(%ecx)
 8048e07:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048e0d:	03 49 01             	add    0x1(%ecx),%ecx
 8048e10:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 8048e13:	04 38                	add    $0x38,%al
 8048e15:	00 00                	add    %al,(%eax)
 8048e17:	00 c0                	add    %al,%al
 8048e19:	00 00                	add    %al,(%eax)
 8048e1b:	00 94 fb ff ff 61 00 	add    %dl,0x61ffff(%ebx,%edi,8)
 8048e22:	00 00                	add    %al,(%eax)
 8048e24:	00 41 0e             	add    %al,0xe(%ecx)
 8048e27:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048e2d:	87 03                	xchg   %eax,(%ebx)
 8048e2f:	41                   	inc    %ecx
 8048e30:	0e                   	push   %cs
 8048e31:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048e37:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 8048e3e:	0e                   	push   %cs
 8048e3f:	14 41                	adc    $0x41,%al
 8048e41:	0e                   	push   %cs
 8048e42:	10 c3                	adc    %al,%bl
 8048e44:	41                   	inc    %ecx
 8048e45:	0e                   	push   %cs
 8048e46:	0c c6                	or     $0xc6,%al
 8048e48:	41                   	inc    %ecx
 8048e49:	0e                   	push   %cs
 8048e4a:	08 c7                	or     %al,%bh
 8048e4c:	41                   	inc    %ecx
 8048e4d:	0e                   	push   %cs
 8048e4e:	04 c5                	add    $0xc5,%al
 8048e50:	10 00                	adc    %al,(%eax)
 8048e52:	00 00                	add    %al,(%eax)
 8048e54:	fc                   	cld    
 8048e55:	00 00                	add    %al,(%eax)
 8048e57:	00 c8                	add    %cl,%al
 8048e59:	fb                   	sti    
 8048e5a:	ff                   	(bad)  
 8048e5b:	ff 02                	incl   (%edx)
 8048e5d:	00 00                	add    %al,(%eax)
 8048e5f:	00 00                	add    %al,(%eax)
 8048e61:	00 00                	add    %al,(%eax)
 8048e63:	00 10                	add    %dl,(%eax)
 8048e65:	00 00                	add    %al,(%eax)
 8048e67:	00 10                	add    %dl,(%eax)
 8048e69:	01 00                	add    %eax,(%eax)
 8048e6b:	00 b6 fb ff ff 04    	add    %dh,0x4fffffb(%esi)
 8048e71:	00 00                	add    %al,(%eax)
 8048e73:	00 00                	add    %al,(%eax)
 8048e75:	00 00                	add    %al,(%eax)
 8048e77:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048e7a:	00 00                	add    %al,(%eax)
 8048e7c:	24 01                	and    $0x1,%al
 8048e7e:	00 00                	add    %al,(%eax)
 8048e80:	b0 fb                	mov    $0xfb,%al
 8048e82:	ff                   	(bad)  
 8048e83:	ff 30                	pushl  (%eax)
 8048e85:	00 00                	add    %al,(%eax)
 8048e87:	00 00                	add    %al,(%eax)
 8048e89:	41                   	inc    %ecx
 8048e8a:	0e                   	push   %cs
 8048e8b:	08 83 02 43 0e 14    	or     %al,0x140e4302(%ebx)
 8048e91:	6a 0e                	push   $0xe
 8048e93:	08 41 0e             	or     %al,0xe(%ecx)
 8048e96:	04 c3                	add    $0xc3,%al

08048e98 <__FRAME_END__> (File Offset: 0xe98):
 8048e98:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__> (File Offset: 0xf14):
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__CTOR_END__> (File Offset: 0xf18):
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__> (File Offset: 0xf1c):
 8049f1c:	ff                   	(bad)  
 8049f1d:	ff                   	(bad)  
 8049f1e:	ff                   	(bad)  
 8049f1f:	ff 00                	incl   (%eax)

08049f20 <__DTOR_END__> (File Offset: 0xf20):
 8049f20:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f24 <__JCR_END__> (File Offset: 0xf24):
 8049f24:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC> (File Offset: 0xf28):
 8049f28:	01 00                	add    %eax,(%eax)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	10 00                	adc    %al,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 00                	or     $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	58                   	pop    %eax
 8049f35:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049f38:	0d 00 00 00 8c       	or     $0x8c000000,%eax
 8049f3d:	8a 04 08             	mov    (%eax,%ecx,1),%al
 8049f40:	f5                   	cmc    
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	e0 82                	loopne 8049ed0 <__FRAME_END__+0x1038> (File Offset: 0xed0)
 8049f4e:	04 08                	add    $0x8,%al
 8049f50:	06                   	push   %es
 8049f51:	00 00                	add    %al,(%eax)
 8049f53:	00 d0                	add    %dl,%al
 8049f55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f5c:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	70 00                	jo     8049f7e <_DYNAMIC+0x56> (File Offset: 0xf7e)
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	14 00                	adc    $0x0,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 e8                	add    %ch,%al
 8049f8d:	83 04 08 11          	addl   $0x11,(%eax,%ecx,1)
 8049f91:	00 00                	add    %al,(%eax)
 8049f93:	00 d8                	add    %bl,%al
 8049f95:	83 04 08 12          	addl   $0x12,(%eax,%ecx,1)
 8049f99:	00 00                	add    %al,(%eax)
 8049f9b:	00 10                	add    %dl,(%eax)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 13                	add    %dl,(%ebx)
 8049fa1:	00 00                	add    %al,(%eax)
 8049fa3:	00 08                	add    %cl,(%eax)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 fe                	add    %bh,%dh
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f a8             	ljmp   *-0x58(%edi)
 8049fad:	83 04 08 ff          	addl   $0xffffffff,(%eax,%ecx,1)
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 86             	ljmp   *-0x7a(%edi)
 8049fbd:	83 04 08 00          	addl   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got:

08049ff0 <.got> (File Offset: 0xff0):
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_> (File Offset: 0xff4):
 8049ff4:	28 9f 04 08 00 00    	sub    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804a001:	84 04 08             	test   %al,(%eax,%ecx,1)
 804a004:	b6 84                	mov    $0x84,%dh
 804a006:	04 08                	add    $0x8,%al
 804a008:	c6 84 04 08 d6 84 04 	movb   $0x8,0x484d608(%esp,%eax,1)
 804a00f:	08 
 804a010:	e6 84                	out    %al,$0x84
 804a012:	04 08                	add    $0x8,%al
 804a014:	f6 84 04 08 06 85 04 	testb  $0x8,0x4850608(%esp,%eax,1)
 804a01b:	08 
 804a01c:	16                   	push   %ss
 804a01d:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804a020:	26 85 04 08          	test   %eax,%es:(%eax,%ecx,1)
 804a024:	36 85 04 08          	test   %eax,%ss:(%eax,%ecx,1)
 804a028:	46                   	inc    %esi
 804a029:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804a02c:	56                   	push   %esi
 804a02d:	85 04 08             	test   %eax,(%eax,%ecx,1)
 804a030:	66 85 04 08          	test   %ax,(%eax,%ecx,1)
 804a034:	76 85                	jbe    8049fbb <_DYNAMIC+0x93> (File Offset: 0xfbb)
 804a036:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a040 <__data_start> (File Offset: 0x1040):
 804a040:	00 00                	add    %al,(%eax)
	...

0804a044 <__dso_handle> (File Offset: 0x1044):
	...

0804a060 <object_types> (File Offset: 0x1060):
 804a060:	b0 8a                	mov    $0x8a,%al
 804a062:	04 08                	add    $0x8,%al
 804a064:	00 00                	add    %al,(%eax)
 804a066:	00 00                	add    %al,(%eax)
 804a068:	b8 8a 04 08 c5       	mov    $0xc508048a,%eax
 804a06d:	8a 04 08             	mov    (%eax,%ecx,1),%al
 804a070:	01 00                	add    %eax,(%eax)
 804a072:	00 00                	add    %al,(%eax)
 804a074:	cc                   	int3   
 804a075:	8a 04 08             	mov    (%eax,%ecx,1),%al
 804a078:	dd 8a 04 08 02 00    	fisttpll 0x20804(%edx)
 804a07e:	00 00                	add    %al,(%eax)
 804a080:	e5 8a                	in     $0x8a,%eax
 804a082:	04 08                	add    $0x8,%al
 804a084:	f5                   	cmc    
 804a085:	8a 04 08             	mov    (%eax,%ecx,1),%al
 804a088:	03 00                	add    (%eax),%eax
 804a08a:	00 00                	add    %al,(%eax)
 804a08c:	fc                   	cld    
 804a08d:	8a 04 08             	mov    (%eax,%ecx,1),%al
 804a090:	0f 8b 04 08 04 00    	jnp    808a89a <_end+0x406fe> (File Offset: 0x4189a)
 804a096:	00 00                	add    %al,(%eax)
 804a098:	17                   	pop    %ss
 804a099:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a09c:	00 00                	add    %al,(%eax)
	...

0804a0a0 <elf_machine> (File Offset: 0x10a0):
 804a0a0:	21 8b 04 08 00 00    	and    %ecx,0x804(%ebx)
 804a0a6:	00 00                	add    %al,(%eax)
 804a0a8:	29 8b 04 08 34 8b    	sub    %ecx,-0x74cbf7fc(%ebx)
 804a0ae:	04 08                	add    $0x8,%al
 804a0b0:	01 00                	add    %eax,(%eax)
 804a0b2:	00 00                	add    %al,(%eax)
 804a0b4:	3b 8b 04 08 49 8b    	cmp    -0x74b6f7fc(%ebx),%ecx
 804a0ba:	04 08                	add    $0x8,%al
 804a0bc:	02 00                	add    (%eax),%al
 804a0be:	00 00                	add    %al,(%eax)
 804a0c0:	52                   	push   %edx
 804a0c1:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a0c4:	58                   	pop    %eax
 804a0c5:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a0c8:	03 00                	add    (%eax),%eax
 804a0ca:	00 00                	add    %al,(%eax)
 804a0cc:	5f                   	pop    %edi
 804a0cd:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a0d0:	6b 8b 04 08 04 00 00 	imul   $0x0,0x40804(%ebx),%ecx
 804a0d7:	00 72 8b             	add    %dh,-0x75(%edx)
 804a0da:	04 08                	add    $0x8,%al
 804a0dc:	81 8b 04 08 05 00 00 	orl    $0x8b880000,0x50804(%ebx)
 804a0e3:	00 88 8b 
 804a0e6:	04 08                	add    $0x8,%al
 804a0e8:	97                   	xchg   %eax,%edi
 804a0e9:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a0ec:	07                   	pop    %es
 804a0ed:	00 00                	add    %al,(%eax)
 804a0ef:	00 9e 8b 04 08 aa    	add    %bl,-0x55f7fb75(%esi)
 804a0f5:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a0f8:	08 00                	or     %al,(%eax)
 804a0fa:	00 00                	add    %al,(%eax)
 804a0fc:	b2 8b                	mov    $0x8b,%dl
 804a0fe:	04 08                	add    $0x8,%al

0804a100 <elf_shtypes> (File Offset: 0x1100):
 804a100:	be 8b 04 08 00       	mov    $0x8048b,%esi
 804a105:	00 00                	add    %al,(%eax)
 804a107:	00 c7                	add    %al,%bh
 804a109:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a10c:	c8 8b 04 08          	enter  $0x48b,$0x8
 804a110:	01 00                	add    %eax,(%eax)
 804a112:	00 00                	add    %al,(%eax)
 804a114:	c7                   	(bad)  
 804a115:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a118:	d5 8b                	aad    $0x8b
 804a11a:	04 08                	add    $0x8,%al
 804a11c:	02 00                	add    (%eax),%al
 804a11e:	00 00                	add    %al,(%eax)
 804a120:	c7                   	(bad)  
 804a121:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a124:	e0 8b                	loopne 804a0b1 <elf_machine+0x11> (File Offset: 0x10b1)
 804a126:	04 08                	add    $0x8,%al
 804a128:	03 00                	add    (%eax),%eax
 804a12a:	00 00                	add    %al,(%eax)
 804a12c:	c7                   	(bad)  
 804a12d:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a130:	eb 8b                	jmp    804a0bd <elf_machine+0x1d> (File Offset: 0x10bd)
 804a132:	04 08                	add    $0x8,%al
 804a134:	04 00                	add    $0x0,%al
 804a136:	00 00                	add    %al,(%eax)
 804a138:	c7                   	(bad)  
 804a139:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a13c:	f4                   	hlt    
 804a13d:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a140:	05 00 00 00 c7       	add    $0xc7000000,%eax
 804a145:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a148:	fd                   	std    
 804a149:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a14c:	06                   	push   %es
 804a14d:	00 00                	add    %al,(%eax)
 804a14f:	00 c7                	add    %al,%bh
 804a151:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a154:	09 8c 04 08 07 00 00 	or     %ecx,0x708(%esp,%eax,1)
 804a15b:	00 c7                	add    %al,%bh
 804a15d:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a160:	12 8c 04 08 08 00 00 	adc    0x808(%esp,%eax,1),%cl
 804a167:	00 c7                	add    %al,%bh
 804a169:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a16c:	1d 8c 04 08 09       	sbb    $0x908048c,%eax
 804a171:	00 00                	add    %al,(%eax)
 804a173:	00 c7                	add    %al,%bh
 804a175:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a178:	25 8c 04 08 0a       	and    $0xa08048c,%eax
 804a17d:	00 00                	add    %al,(%eax)
 804a17f:	00 c7                	add    %al,%bh
 804a181:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 804a184:	2f                   	das    
 804a185:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 804a188:	0b 00                	or     (%eax),%eax
 804a18a:	00 00                	add    %al,(%eax)
 804a18c:	c7                   	(bad)  
 804a18d:	8b 04 08             	mov    (%eax,%ecx,1),%eax

Disassembly of section .bss:

0804a190 <stderr@@GLIBC_2.0> (File Offset: 0x1190):
 804a190:	00 00                	add    %al,(%eax)
	...

0804a194 <completed.6086> (File Offset: 0x1194):
 804a194:	00 00                	add    %al,(%eax)
	...

0804a198 <dtor_idx.6088> (File Offset: 0x1198):
 804a198:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment> (File Offset: 0x1190):
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x80483e0> (File Offset: 0x1208)
   a:	74 75                	je     81 <_init-0x80483d7> (File Offset: 0x1211)
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 31 2d 39 75 	cs ss xor %ebp,%cs:%ss:0x75627539
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x80483c2> (File Offset: 0x1226)
  21:	33 29                	xor    (%ecx),%ebp
  23:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  26:	36 2e 31 00          	ss xor %eax,%cs:%ss:(%eax)
